%% initiate
clear all; close all; clc;
addpath(genpath('script'));
addpath(genpath('components'));
addpath(genpath('load'));

%% Constants
timesteps = 72;
cat = 'case';

%% Set Boundary Conditions
boundary;

%% Initiate
component_names = {...
    ...%Production components
    'WIND',...
    'SOLAR',...
    'SOLAR_BETA',...
    'CSP',...
    'METHANE',...
    'COAL',...
    'COW',...
    ...%
    ...%Storage components
    'BATTERY',...
    'H2_STORAGE',...
    'C_STORAGE',...
    'CH4_STORAGE',...
    ...%
    ...%Conversion components
    'DCAC',...
    'ACDC',...
    'ELEC',...
    'DCAC_BETA',...
    'ACDC_BETA',...
    'ELEC_BETA',...
    'DCFC',...
    'PEMFC',...
    'METHANE_REFORMER',...
    'DUNG_GASIFIER',...
    'GAS_TURBINE',...
    ...%
    ...%FC components
    'SOFC',...
    ...%
    ...%Transport
    'H2_PIPELINE',...
    ...%
    ...%Req components
    ...%'MARKET',...
    'SINK'...
    };

components = struct(...
	...%prod
	char('WIND'),prod_wind(1,CF_W,timesteps),...
    char('SOLAR'),prod_solar(2,CF_S,timesteps),...
    char('SOLAR_BETA'),prod_solar_beta(2,CF_S,timesteps),...
    char('CSP'),prod_csp(1,CF_S,timesteps),...
    char('METHANE'),prod_methane(1,CF_FULL,timesteps),...
    char('COAL'),prod_coal(1,CF_FULL,timesteps),...
    char('COW'),prod_cow(1,CF_FULL,timesteps),...
    ...%stor
    char('BATTERY'),stor_battery(3,CF_FULL,timesteps),...
    char('H2_STORAGE'),stor_h2(4,CF_FULL,timesteps),...
    char('C_STORAGE'),stor_c(4,CF_FULL,timesteps),...
    char('CH4_STORAGE'),stor_ch4(4,CF_FULL,timesteps),...
    ...%conv
    char('DCAC'),conv_dcac(5,CF_FULL,timesteps),...
    char('ACDC'),conv_acdc(5,CF_FULL,timesteps),...
    char('ELEC'),conv_elec(5,CF_FULL,timesteps),...
    char('DCFC'),conv_dcfc(5,CF_FULL,timesteps),...
    char('PEMFC'),conv_pemfc(0,CF_FULL,timesteps),...
    char('DUNG_GASIFIER'),conv_dung_gasifier(0,CF_FULL,timesteps),...
    char('GAS_TURBINE'),conv_gas_turbine(0,CF_FULL,timesteps),...
    char('METHANE_REFORMER'),conv_methane(6,CF_FULL,timesteps),...
    char('DCAC_BETA'),conv_dcac_beta(5,CF_FULL,timesteps),...
    char('ACDC_BETA'),conv_acdc_beta(5,CF_FULL,timesteps),...
    char('ELEC_BETA'),conv_elec_beta(5,CF_FULL,timesteps),...
    ...%FC
    char('SOFC'),fc_sofc(7,CF_FULL,timesteps),...
    ...%tran
    char('H2_PIPELINE'),tran_h2_pipeline(7,CF_FULL,timesteps),...
    ...%req
    char('MARKET'),req_market(8,CF_MARKET,timesteps),...
    char('SINK'),req_sink(8,CF_FULL,timesteps)...
    );

c = 1;
for i = 1:length(component_names)
    obj = components.(char(component_names(i)));
    obj.c = c;
    components.(char(component_names(i))) = obj;
    c = c + obj.cols;
end

%% Equations
disp(datestr(now))
tic
equations;
toc

%% Solve
disp(datestr(now))
tic
solveClean;
toc

%% Output
%output_graph;
%fprintf('%i\t%i\t%i\t%i\n\n',timesteps,length(A(:,1)),length(Aeq(:,1)),nvars)

% fprintf('%i\n',length(Aeq(1,:)))

% fprintf('Timesteps\t%i\n\n',timesteps);
% fprintf('matrix_local_max: \t%i\n',length(matrix_local_max(:,1)));
% fprintf('matrix_local_response: \t%i\n',length(matrix_local_response(:,1)));
% fprintf('matrix_local_stor_capacity: \t%i\n',length(matrix_local_stor_capacity(:,1)));
% fprintf('A: \t%i\t%i\n\n',length(A(:,1)),length(A(1,:)))
% 
% fprintf('matrix_global_demand: \t%i\n',length(matrix_global_demand(:,1)));
% fprintf('matrix_local_ratio: \t%i\n',length(matrix_local_ratio(:,1)));
% fprintf('matrix_local_stor: \t%i\n',length(matrix_local_stor(:,1)));
% fprintf('matrix_local_ic: \t%i\n',length(matrix_local_ic(:,1)));
% fprintf('matrix_local_stor_capacity_to_power: \t%i\n',length(matrix_local_stor_capacity_to_power(:,1)));
% fprintf('A: \t%i\t%i\n\n',length(Aeq(:,1)),length(Aeq(1,:)))

% fprintf('$%i$\t',length(matrix_local_max(:,1)));
% fprintf('$%i$\t',length(matrix_local_response(:,1)));
% fprintf('$%i$\t',length(matrix_local_stor_capacity(:,1)));

% fprintf('$%i$\t & ',length(matrix_local_max(:,1)));
% fprintf('$%i$\t & ',length(matrix_local_response(:,1)));
% fprintf('$%i$\t & ',length(matrix_local_stor_capacity(:,1)));
% 
% fprintf('$%i$\t & ',length(matrix_global_demand(:,1)));
% fprintf('$%i$\t & ',length(matrix_local_ratio(:,1)));
% fprintf('$%i$\t & ',length(matrix_local_ic(:,1)));
% fprintf('$%i$\t & ',length(matrix_local_stor_capacity_to_power(:,1)));
% fprintf('$%i$\t',length(Aeq(:,1)) + length(A(:,1)));
% 
% 
% fprintf('\\\\ \\hline\n')

%% Send mail
%sendMail;